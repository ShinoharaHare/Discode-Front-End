{"version":3,"sources":["webpack:///./node_modules/html-linkify/index.js","webpack:///./node_modules/html-escape/index.js","webpack:///./node_modules/embed-plugin-url/src/index.js"],"names":["rLink","rEmail","escape","anchor","url","attrs","text","href","test","attrsString","combine","Array","prototype","slice","call","arguments","map","attributes","filter","Boolean","join","emails","replace","match","email","elAttrs","Object","keys","name","value","module","exports","options","retval","cur","escapeFn","str","exec","index","lastIndex","rAmp","rLt","rGt","rApos","rQuot","hChars","coerceToString","val","String","undefined","id","opts","defaultOptions","result"],"mappings":"gHAMA,IAAIA,EAAQ,yLAGRC,EAAS,gFAETC,EAAS,EAAQ,QAsBrB,SAASC,EAAOC,EAAKC,GACpB,IAAIC,EAAOJ,EAAOE,GACjBG,EAAOH,EAGH,kBAAkBI,KAAKD,KAC3BA,EAAO,UAAYA,GAGpB,IAAIE,EAAcC,EAAQ,CAAEH,KAAMA,GAAQF,GAE1C,MAAO,MAAQI,EAAc,IAAMH,EAAO,OAI3C,SAASI,IACR,OAAOC,MAAMC,UAAUC,MAAMC,KAAKC,WAChCC,IAAIC,GACJC,OAAOC,SACPC,KAAK,KAIR,SAASC,EAAOf,EAAMD,GACrB,IAAII,EAAcQ,EAAWZ,GAE7B,OAAOC,EAAKgB,QAAQrB,GAAQ,SAASsB,EAAOC,GAC3C,IAAIC,EAAUR,EAAW,CAAEV,KAAM,UAAYiB,IAK7C,OAJIf,IACHgB,GAAW,IAAMhB,GAGX,MAAQgB,EAAU,IAAMvB,EAAOsB,GAAS,UAIjD,SAASP,EAAWZ,GACnB,OAAOA,EACAqB,OAAOC,KAAKtB,GAAOW,KAAI,SAASY,GACtC,IAAIC,EAAQxB,EAAMuB,GAClB,OAAO1B,EAAO0B,GAAQ,KAAQ1B,EAAO2B,GAAS,OAC5CT,KAAK,KAJa,GAzDtBU,EAAOC,QAAU,SAASzB,EAAM0B,GACxBA,IAASA,EAAU,IAE1B,IAA0BT,EAAtBU,EAAS,GAAIC,EAAM,EAEnBC,GAA8B,IAAnBH,EAAQ9B,OAAmB,SAASkC,GAAO,OAAOA,GAASlC,EAE1E,MAAOqB,EAAQvB,EAAMqC,KAAK/B,GACzB2B,GAAUE,EAAS7B,EAAKO,MAAMqB,EAAKX,EAAMe,QACzCL,GAAU9B,EAAOoB,EAAM,GAAIS,EAAQf,YACnCiB,EAAMlC,EAAMuC,UAMb,OAHAN,GAAUE,EAAS7B,EAAKO,MAAMqB,IAC9BD,EAASZ,EAAOY,EAAQD,EAAQf,YAEzBgB,I,oCCzBR,IAAIO,EAAO,KACVC,EAAM,KACNC,EAAM,KACNC,EAAO,MACPC,EAAQ,MACRC,EAAQ,YAET,SAASC,EAAeC,GACvB,OAAOC,OAAgB,OAARD,QAAwBE,IAARF,EAAqB,GAAKA,GAG1DjB,EAAOC,QAAU,SAASK,GAGzB,OAFAA,EAAMU,EAAeV,GAEdS,EAAOrC,KAAK4B,GAChBA,EACAd,QAAQkB,EAAK,SACblB,QAAQmB,EAAI,QACZnB,QAAQoB,EAAI,QACZpB,QAAQqB,EAAM,SACdrB,QAAQsB,EAAO,UACfR,I,kCCzBJ,6FAGA,MAAMc,EAAK,MAEI,SAAS9C,EAAI+C,GAC1B,MAAMC,EAAiB,CACrBnC,WAAY,GAGZf,QAAQ,IAGJ,WAAEe,EAAU,OAAEf,GAAW,IAAO,GAAIkD,EAAgBD,GAC1D,MAAO,CACLD,KACA,gBAAgBlB,GACd,OAAO,IAAO,GAAIA,EAAS,CACzBqB,OAAQ,IAAQrB,EAAQqB,OAAQ,CAAEpC,aAAYf,eAMtDE,EAAI8C,GAAKA","file":"js/chunk-39db54ff.2d2fbcc9.js","sourcesContent":["// Takes plain text and replaces links with HTML anchor elements. Based on\n// https://github.com/thejh/node-linkify\n\"use strict\";\n\n// Link regex\n// See http://daringfireball.net/2010/07/improved_regex_for_matching_urls\nvar rLink = /\\b((?:https?:\\/\\/|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:'\".,<>?«»“”‘’]))/gi;\n\n// Email regex\nvar rEmail = /\\b(([a-zA-Z0-9\\-\\_\\.])+(\\+[a-zA-Z0-9]*)?@[a-zA-Z\\_\\-]+?(\\.[a-zA-Z]{2,6})+)/gim;\n\nvar escape = require(\"html-escape\");\n\nmodule.exports = function(text, options) {\n\tif ( ! options) options = {};\n\n\tvar retval = \"\", cur = 0, match;\n\n\tvar escapeFn = options.escape === false ? function(str) { return str; } : escape;\n\n\twhile (match = rLink.exec(text)) {\n\t\tretval += escapeFn(text.slice(cur, match.index));\n\t\tretval += anchor(match[0], options.attributes);\n\t\tcur = rLink.lastIndex;\n\t}\n\n\tretval += escapeFn(text.slice(cur));\n\tretval = emails(retval, options.attributes);\n\n\treturn retval;\n};\n\n// Return an anchor element for the url\nfunction anchor(url, attrs) {\n\tvar text = escape(url),\n\t\thref = url;\n\n\t// Ensure protocol at beginning of url\n\tif (!/^[a-zA-Z]{1,6}:/.test(href)) {\n\t\thref = 'http://' + href;\n\t}\n\n\tvar attrsString = combine({ href: href }, attrs);\n\n\treturn \"<a \" + attrsString + \">\" + text + \"</a>\";\n}\n\n// combine attrs objects into single string\nfunction combine() {\n\treturn Array.prototype.slice.call(arguments)\n\t\t.map(attributes)\n\t\t.filter(Boolean)\n\t\t.join(\" \");\n}\n\n// Replace emails in text with anchor elements\nfunction emails(text, attrs) {\n\tvar attrsString = attributes(attrs);\n\n\treturn text.replace(rEmail, function(match, email) {\n\t\tvar elAttrs = attributes({ href: \"mailto:\" + email });\n\t\tif (attrsString) {\n\t\t\telAttrs += \" \" + attrsString;\n\t\t}\n\n\t\treturn \"<a \" + elAttrs + \">\" + escape(email) + \"</a>\";\n\t});\n}\n\nfunction attributes(attrs) {\n\tif ( ! attrs) return \"\";\n\treturn Object.keys(attrs).map(function(name) {\n\t\tvar value = attrs[name];\n\t\treturn escape(name) + \"=\\\"\" + escape(value) + \"\\\"\";\n\t}).join(\" \");\n}\n","\"use strict\";\n\n/* From Twitter's Hogan.js */\n\nvar rAmp = /&/g,\n\trLt = /</g,\n\trGt = />/g,\n\trApos =/\\'/g,\n\trQuot = /\\\"/g,\n\thChars =/[&<>\\\"\\']/;\n\nfunction coerceToString(val) {\n\treturn String((val === null || val === undefined) ? '' : val);\n}\n\nmodule.exports = function(str) {\n\tstr = coerceToString(str);\n\n\treturn hChars.test(str)\n\t\t? str\n\t\t\t.replace(rAmp,'&amp;')\n\t\t\t.replace(rLt,'&lt;')\n\t\t\t.replace(rGt,'&gt;')\n\t\t\t.replace(rApos,'&#39;')\n\t\t\t.replace(rQuot, '&quot;')\n\t\t: str;\n};\n","import extend from \"just-extend\"\nimport linkify from \"html-linkify\"\n\nconst id = \"url\"\n\nexport default function url(opts) {\n  const defaultOptions = {\n    attributes: {},\n\n    // setting this to true will mess up characters like \"\n    escape: false\n  }\n\n  const { attributes, escape } = extend({}, defaultOptions, opts)\n  return {\n    id,\n    async transform(options) {\n      return extend({}, options, {\n        result: linkify(options.result, { attributes, escape })\n      })\n    }\n  }\n}\n\nurl.id = id\n"],"sourceRoot":""}