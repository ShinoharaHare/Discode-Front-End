{"version":3,"sources":["webpack:///./node_modules/embed-plugin-utilities/src/string-replace-async.js","webpack:///./node_modules/embed-plugin-utilities/src/insert.js","webpack:///./node_modules/embed-plugin-utilities/src/with-details-template.js","webpack:///./node_modules/embed-plugin-utilities/src/without-details-template.js","webpack:///./node_modules/embed-plugin-utilities/src/get-query.js","webpack:///./node_modules/embed-plugin-utilities/src/index.js","webpack:///./node_modules/embed-plugin-base/src/index.js","webpack:///./node_modules/embed-plugin-map/src/index.js","webpack:///./node_modules/just-truncate/index.js"],"names":["matchAll","str","re","matches","res","exec","push","global","replaceAll","reverse","reduce","match","prefix","slice","index","postfix","length","replacement","assignReplacement","replacer","args","concat","input","apply","then","concurrency","promises","map","Promise","all","processString","processor","stringReplaceAsync","lastIndex","resolve","e","reject","anchorRegex","getAnchorRegex","regex","RegExp","source","isMatchPresent","text","test","isAnchorTagApplied","result","plugins","filter","plugin","id","saveServiceName","_services","x","async","pushEmbedContent","options","pluginOptions","_embeds","content","getTemplate","find","saveEmbedData","opts","url","getMatch","string","_process","template","data","basicReplace","replaceUrl","_replaceAnyways","anchorReplace","t","inlineEmbed","_ignoreAnchorCheck","_ignoreInlineCheck","output","title","embedUrl","description","thumbnail","thumbClassName","showPlayIcon","name","height","esc","encodeURIComponent","Object","keys","params","k","join","defaultOptions","_onLoadInternal","onLoad","Error","API_KEY","fetch","location","json","results","geometry","mode","gAuthKey","lat","lng","base","src","truncate","end","Math","max","module","exports"],"mappings":"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","file":"js/chunk-2d7d9604.cab7e838.js","sourcesContent":["import extend from \"just-extend\"\n\nfunction matchAll(str, re) {\n  const matches = []\n  let res = re.exec(str)\n\n  while (res) {\n    matches.push(res)\n\n    if (!re.global) {\n      break\n    }\n\n    res = re.exec(str)\n  }\n  return matches\n}\n\nfunction replaceAll(str, matches) {\n  return matches.reverse().reduce(function(res, match) {\n    const prefix = res.slice(0, match.index)\n    const postfix = res.slice(match.index + match[0].length)\n\n    return prefix + match.replacement + postfix\n  }, str)\n}\n\nfunction assignReplacement(match, replacer) {\n  const args = match.concat([match.index, match.input])\n\n  return replacer.apply(null, args).then(function(res) {\n    return extend({}, match, { replacement: res })\n  })\n}\n\nfunction concurrency(matches, replacer) {\n  const promises = matches.map(function(match) {\n    return assignReplacement(match, replacer)\n  })\n\n  return Promise.all(promises)\n}\n\nfunction processString(str, re, replacer) {\n  const matches = matchAll(str, re)\n  const processor = concurrency\n\n  return processor(matches, replacer).then(function(matches) {\n    return replaceAll(str, matches)\n  })\n}\n\nfunction stringReplaceAsync(str, re, replacer) {\n  re.lastIndex = 0\n  try {\n    return Promise.resolve(processString(str, re, replacer))\n  } catch (e) {\n    return Promise.reject(e)\n  }\n}\n\nexport default stringReplaceAsync\n","import extend from \"just-extend\"\nimport stringReplaceAsync from \"./string-replace-async\"\n\nconst anchorRegex = /<a[^>]*>([^<]+)<\\/a>/gi\n\nfunction getAnchorRegex(regex) {\n  return new RegExp(`<a[^>]*>(${regex.source})<\\\\/a>`, \"gi\")\n}\n\n/**\n * Returns the matched regex data or whether the text has any matching string\n * @param regex Regex of the matching pattern\n * @param text String which has to be searched\n * @param test Return boolean or matching array\n * @returns {*} Boolean|Array\n */\nfunction isMatchPresent(regex, text, test = false) {\n  return test ? regex.test(text) : text.match(regex)\n}\n\n/**\n * Tells wheteher the matching string is present inside an anchor tag\n * @param text\n * @returns {*} Boolean\n * @param regex\n */\nfunction isAnchorTagApplied({ result, plugins = [] }, { regex }) {\n  return (\n    getAnchorRegex(regex).test(result) ||\n    plugins.filter(plugin => plugin.id === \"url\").length\n  )\n}\n\nfunction saveServiceName({ _services }, { id }, match) {\n  if (!_services.filter(x => x.match === match).length) {\n    _services.push({ id, match })\n  }\n}\n\nasync function pushEmbedContent(text, options, pluginOptions, index) {\n  const { regex } = pluginOptions\n  await stringReplaceAsync(text, regex, async (...args) => {\n    options._embeds.push({\n      content: await getTemplate(args, options, pluginOptions),\n      index: index || args.find(x => typeof x === \"number\")\n    })\n    saveServiceName(options, pluginOptions, args[0])\n  })\n  return options\n}\n\n/**\n * Save the embed code into an array that can be added later to the end of original string\n * @param opts\n * @param pluginOptions\n */\nasync function saveEmbedData(opts, pluginOptions) {\n  const { regex } = pluginOptions\n  let options = extend({}, opts)\n\n  if (isAnchorTagApplied(options, { regex })) {\n    await stringReplaceAsync(\n      options.result,\n      anchorRegex,\n      async (match, url, index) => {\n        if (!isMatchPresent(regex, match, true)) return match\n        saveServiceName(options, pluginOptions, match)\n        options = await pushEmbedContent(url, options, pluginOptions, index)\n        return match\n      }\n    )\n  } else {\n    options = pushEmbedContent(options.result, options, pluginOptions)\n  }\n\n  return options\n}\n\nfunction getMatch(regex, string) {\n  regex.lastIndex = 0\n  const matches = regex.exec(string)\n  regex.lastIndex = 0\n  return matches\n}\n\nasync function getTemplate(args, options, pluginOptions) {\n  const { _process, template } = pluginOptions\n  let data\n  if (_process) {\n    data = await _process(args, options, pluginOptions)\n  }\n  return template(args, options, pluginOptions, data)\n}\n\nasync function basicReplace(options, pluginOptions) {\n  const { result, replaceUrl } = options\n  const { regex, _replaceAnyways } = pluginOptions\n  return stringReplaceAsync(result, regex, async (...args) => {\n    saveServiceName(options, pluginOptions, args[0])\n    return replaceUrl || _replaceAnyways\n      ? getTemplate(args, options, pluginOptions)\n      : `${args[0]} ${await getTemplate(args, options, pluginOptions)}`\n  })\n}\n\nasync function anchorReplace(options, pluginOptions) {\n  const { result, replaceUrl } = options\n  const { regex, _replaceAnyways } = pluginOptions\n\n  return stringReplaceAsync(result, anchorRegex, async (match, url) => {\n    if (!isMatchPresent(regex, url, true)) {\n      return match\n    }\n\n    if (!(replaceUrl || _replaceAnyways)) {\n      const args = getMatch(regex, url)\n      saveServiceName(options, pluginOptions, args[0])\n      const t = await getTemplate(args, options, pluginOptions)\n      return args ? match + t : match\n    }\n    return stringReplaceAsync(url, regex, async (...args) => {\n      saveServiceName(options, pluginOptions, args[0])\n      return getTemplate(args, options, pluginOptions)\n    })\n  })\n}\n\n/**\n * Insert the embed code in the original string.\n * @param options\n * @param pluginOptions\n * @returns options\n */\nexport default async function(options, pluginOptions) {\n  const { inlineEmbed } = options\n  const { _ignoreAnchorCheck, _ignoreInlineCheck, regex } = pluginOptions\n\n  if (!inlineEmbed && !_ignoreInlineCheck) {\n    return saveEmbedData(options, pluginOptions)\n  }\n\n  let output\n\n  output =\n    isAnchorTagApplied(options, { regex }) && !_ignoreAnchorCheck\n      ? await anchorReplace(options, pluginOptions)\n      : await basicReplace(options, pluginOptions)\n\n  return extend({}, options, {\n    result: output\n  })\n}\n","import truncate from \"just-truncate\"\n\nexport default function(\n  { url, title, embedUrl, description, thumbnail },\n  thumbClassName,\n  showPlayIcon = false\n) {\nreturn `<div class=\"ejs-preview ejs-embed\"><div class=\"ejs-thumb ${thumbClassName}\" data-url=\"${embedUrl}\" style=\"background-image:url(${thumbnail})\">${showPlayIcon ? '<span>&#9658;</span>' : ''}</div><div class=\"ejs-info\"><h4 class=\"ejs-title\"><a href=\"${url}\">${title}</a></h4><div class=\"ejs-desc\">${truncate(\n    description,\n    150\n  )}</div></div></div>`\n}\n","export default function(embedUrl, height, name) {\n  return `<iframe class=\"ejs-embed ejs-${name}\" src=\"${embedUrl}\" frameBorder=\"0\" height=\"${height}\"></iframe>`\n}\n","export default function(params) {\n  const esc = encodeURIComponent\n  return Object.keys(params).map(k => `${esc(k)}=${esc(params[k])}`).join(\"&\")\n}\n","import insert from \"./insert\"\nimport withDetailsTemplate from \"./with-details-template\"\nimport withoutDetailsTemplate from \"./without-details-template\"\nimport getQuery from \"./get-query\"\n\nexport { insert, withDetailsTemplate, withoutDetailsTemplate, getQuery }\n","import extend from \"just-extend\"\nimport { insert } from \"embed-plugin-utilities\"\n\nexport default opts => {\n  const defaultOptions = {\n    _replaceAnyways: false,\n    _ignoreAnchorCheck: false,\n    _ignoreInlineCheck: false,\n    onLoad() {}\n  }\n\n  const pluginOptions = extend({}, defaultOptions, opts)\n\n  const { _onLoadInternal, onLoad, regex, template, id } = pluginOptions\n\n  if (!regex) {\n    throw new Error(\"regex not passed.\")\n  }\n  if (!template) {\n    throw new Error(\"template not passed.\")\n  }\n\n  return {\n    id,\n\n    async transform(options) {\n      return extend({}, options, await insert(options, pluginOptions))\n    },\n\n    onLoad(options) {\n      if (_onLoadInternal) {\n        _onLoadInternal(options, pluginOptions)\n      }\n      if (onLoad) {\n        onLoad(options, pluginOptions)\n      }\n    }\n  }\n}\n","import extend from \"just-extend\"\nimport base from \"embed-plugin-base\"\nimport { withoutDetailsTemplate } from \"embed-plugin-utilities\"\n\nconst API_KEY = 'AIzaSyC8wxFAFPo_utEJx9oSL-OdeLFk5WFHOZI';\n\nconst id = \"map\"\n\nasync function _process(args, { fetch }) {\n  const location = args[1]\n  const res = await fetch(\n    `https://maps.googleapis.com/maps/api/geocode/json?address=${location}&sensor=false&key=${API_KEY}`\n  )\n  const data = await res.json()\n  return data.results[0].geometry.location\n}\n\nfunction map(opts) {\n  const defaultOptions = {\n    id,\n    regex: /@\\((.+)\\)/gi,\n    mode: \"place\",\n    height: 300,\n    gAuthKey: \"\",\n\n    async template(args, options, { mode, gAuthKey, height }, { lat, lng }) {\n      const location = args[1]\n      const base = `https://www.google.com/maps/embed/v1/${mode}?key=${gAuthKey}`\n\n      let src\n      if (mode === \"place\") {\n        src = `${base}&q=${location}`\n      } else if (mode === \"streetview\") {\n        src = `${base}&location=${lat},${lng}&heading=210&pitch=10&fov=35`\n      } else if (mode === \"view\") {\n        src = `${base}&center=${lat},${lng}&zoom=18&maptype=satellite`\n      }\n\n      return withoutDetailsTemplate(src, height, id)\n    }\n  }\n\n  const pluginOptions = extend({}, defaultOptions, opts, {\n    _process,\n    _ignoreAnchorCheck: true\n  })\n  return base(pluginOptions)\n}\n\nmap.id = \"map\"\n\nexport default map\n","module.exports = truncate;\n\n/*\n  truncate('when shall we three meet again', 9); // 'when s...'\n  truncate('when shall we three meet again', 10, ' (etc)'); // 'when (etc)'\n  truncate('when shall we', 15,); // 'when shall we'\n  truncate('when shall we', 15, '(more)'); // 'when shall we'\n  truncate('when shall we', 7, ' (more)'); // ' (more)'\n*/\n\nfunction truncate(str, length, end) {\n  if (length == null || length >= str.length) {\n    return str;\n  }\n  if (end == null) {\n    end = '...';\n  }\n  return str.slice(0, Math.max(0, length - end.length)) + end;\n}\n"],"sourceRoot":""}